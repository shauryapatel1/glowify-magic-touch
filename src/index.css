
@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  :root {
    --background: 0 0% 0%;
    --foreground: 0 0% 100%;

    --card: 0 0% 0%;
    --card-foreground: 0 0% 100%;

    --popover: 0 0% 0%;
    --popover-foreground: 0 0% 100%;

    --primary: 0 0% 100%;
    --primary-foreground: 0 0% 0%;

    --secondary: 0 0% 5%;
    --secondary-foreground: 0 0% 100%;

    --muted: 0 0% 9%;
    --muted-foreground: 0 0% 80%;

    --accent: 0 0% 10%;
    --accent-foreground: 0 0% 100%;

    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 0 0% 98%;

    --border: 0 0% 15%;
    --input: 0 0% 15%;
    --ring: 0 0% 100%;

    --radius: 0.75rem;
  }

  * {
    @apply border-border;
  }

  html {
    @apply scroll-smooth;
  }

  body {
    @apply bg-background text-foreground antialiased overflow-x-hidden;
    font-feature-settings: "ss01", "ss02", "cv01", "cv02", "cv03";
  }
}

@layer components {
  .glass-white {
    @apply backdrop-blur-lg bg-white/10 border border-white/20 shadow-[0_4px_20px_-2px_rgba(255,255,255,0.1)];
  }

  .glass-black {
    @apply backdrop-blur-lg bg-black/80 border border-white/10 shadow-[0_4px_20px_-2px_rgba(0,0,0,0.3)];
  }

  .glass-card {
    @apply backdrop-blur-lg bg-black/60 border border-white/10 rounded-2xl shadow-[0_4px_20px_-2px_rgba(0,0,0,0.3)];
  }

  .noise-bg {
    background-image: url("data:image/svg+xml,%3Csvg viewBox='0 0 200 200' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='noiseFilter'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='0.65' numOctaves='3' stitchTiles='stitch'/%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23noiseFilter)'/%3E%3C/svg%3E");
    background-position: center;
    background-size: cover;
    opacity: 0.03;
    mix-blend-mode: overlay;
    pointer-events: none;
  }

  .glow-text {
    text-shadow: 0 0 30px rgba(255, 255, 255, 0.3), 0 0 5px rgba(255, 255, 255, 0.2);
  }

  .pixel-transition {
    transition: all 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94);
  }

  .hover-lift {
    transition: transform 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94);
  }

  .hover-lift:hover {
    transform: translateY(-3px);
  }

  .scroll-smooth {
    scroll-behavior: smooth;
  }

  .shimmer-effect {
    background-size: 200% 100%;
    background-position: -100% 0;
    animation: shimmer 2s infinite;
    background-image: linear-gradient(90deg, rgba(255,255,255,0) 0%, rgba(255,255,255,0.05) 50%, rgba(255,255,255,0) 100%);
  }

  .h-screen-dvh {
    height: 100vh;
    height: 100dvh;
  }

  .min-h-screen-dvh {
    min-height: 100vh;
    min-height: 100dvh;
  }
  
  /* Animation delay utilities */
  .animation-delay-100 {
    animation-delay: 100ms;
  }
  
  .animation-delay-200 {
    animation-delay: 200ms;
  }
  
  .animation-delay-300 {
    animation-delay: 300ms;
  }
  
  .animation-delay-400 {
    animation-delay: 400ms;
  }
  
  .animation-delay-500 {
    animation-delay: 500ms;
  }
  
  /* Border glow animation */
  .border-glow {
    animation: border-glow 2s infinite ease-in-out;
  }
  
  /* Text glitch effect */
  .text-glitch {
    position: relative;
    animation: text-glitch 3s infinite;
  }
  
  .text-glitch::before,
  .text-glitch::after {
    content: attr(data-text);
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    opacity: 0.8;
  }
  
  .text-glitch::before {
    animation: text-glitch-1 2s infinite;
    color: #00ffff;
    clip-path: polygon(0 0, 100% 0, 100% 45%, 0 45%);
    transform: translate(-0.025em, -0.0125em);
    opacity: 0.8;
  }
  
  .text-glitch::after {
    animation: text-glitch-2 2s infinite;
    color: #ff00ff;
    clip-path: polygon(0 80%, 100% 20%, 100% 100%, 0 100%);
    transform: translate(0.025em, 0.0125em);
    opacity: 0.8;
  }
}

/* Keyframes for the text glitch animations */
@keyframes text-glitch-1 {
  0% {
    transform: translate(0);
  }
  10% {
    transform: translate(-0.05em, -0.025em);
  }
  20% {
    transform: translate(0.05em, 0.025em);
  }
  30% {
    transform: translate(0);
  }
  100% {
    transform: translate(0);
  }
}

@keyframes text-glitch-2 {
  0% {
    transform: translate(0);
  }
  10% {
    transform: translate(0.05em, 0.025em);
  }
  20% {
    transform: translate(-0.05em, -0.025em);
  }
  30% {
    transform: translate(0);
  }
  100% {
    transform: translate(0);
  }
}

@keyframes text-glitch {
  0% {
    opacity: 1;
  }
  10%, 12% {
    opacity: 0.8;
  }
  15% {
    opacity: 1;
  }
  20%, 22% {
    opacity: 0.9;
  }
  23% {
    opacity: 1;
  }
  100% {
    opacity: 1;
  }
}
